version: "3.7"

# Based on https://github.com/nicolargo/docker-influxdb-grafana
# https://github.com/Coac/fluentd-influxdb-grafana
services:
  # fluentd-gui: 
  #   image:  dvladnik/fluentd-ui
  #   ports:
  #     - 9292:9292
  # fluentd: 
  #   build: 
  #     context: .
  #     dockerfile: ./Dockerfile_fluentd
  #   container_name: fluentd
  #   volumes:
  #     - ./fluent-bit/conf:/fluent-bit/etc
  #     - './logs/:/var/log/'
  #   ports:
  #     - 24224:24224
  #     - 5140:5140/udp
  #     - 2020:2020
  #   logging:
  #       driver: "json-file"
  #       options:
  #           max-size: 100m
  #           max-file: "5"
  #   networks:
  #     - fluent
  # kibana:
  #   image: docker.elastic.co/kibana/kibana:7.8.1
  #   container_name: kib01
  #   ports:
  #     - 5601:5601
  #   networks:
  #     - fluent      
  # elasticsearch:
  #   image: docker.elastic.co/elasticsearch/elasticsearch:7.8.1
  #   container_name: es01
  #   ports:
  #     - "9200:9200p"
  #   networks:
  #     - fluent
  #   environment:
  #     - node.name=es01
  #     - cluster.name=es-docker-cluster
  #     - bootstrap.memory_lock=false
  #     - cluster.initial_master_nodes=es01
  #     - "ES_JAVA_OPTS=-Xms512m -Xmx512m"

  # Documentation environment  https://hub.docker.com/_/influxdb           
  influxdb:
    image: influxdb:latest
    container_name: influxdb
    ports:
      - "8083:8083"
      - "8086:8086"
      - "8090:8090"
    env_file:
      - 'env.influxdb'
    volumes:
      # Data persistency
      # sudo mkdir -p /srv/docker/influxdb/data
      - ./srv/docker/influxdb/data:/var/lib/influxdb
    # networks:
    #   - fluent

  telegraf:
    image: telegraf:latest
    container_name: telegraf
    # networks:
    #   - fluent
    env_file:
      - 'env.telegraf'
    volumes:
      - ./telegraf.conf:/etc/telegraf/telegraf.conf:ro

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    env_file:
      - 'env.grafana'
    user: "0"
    # networks:
    #   - fluent
    volumes:
      # Data persistency
      # sudo mkdir -p /srv/docker/grafana/data; chown 472:472 /srv/docker/grafana/data
      - ./srv/docker/grafana/data:/var/lib/grafana
      - ./srv/docker/grafana/provisioning/:/etc/grafana/provisioning/

networks:
  fluent:
    driver: bridge